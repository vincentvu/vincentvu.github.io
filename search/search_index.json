{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"Blog/2023-08-08-leetcode/","title":"Some Common Leetcode Problems For Tech Interviews","text":"<p>To be honest, I really hate to practice Leetcode problems. But I know that it is kind of the standard of in the tech interview, it's better to practice so that we can use the same language with interviewer. </p> <p>Below are some common leedcode problems which cover almost all important topics for any software interview. I got the list mainly from https://seanprashad.com/leetcode-patterns/</p> No Challenge name Topics Difficulty 1 Contains Duplicate Array Easy 2 Missing Number Arrays, Bit Manipulation Easy 3 Find All Numbers Disappeared in an Array Arrays Easy 4 Single Number Arrays, Bit Manipulation Easy 5 Climbing Stairs Dynamic Programming Easy 6 Best Time to Buy and Sell Stock Greedy Easy 7 Maximum Subarray Dynamic Programming Easy 8 Range Sum Query - Immutable Dynamic Programming Easy 9 Counting Bits Dynamic Programming, Bit Manipulation Easy 10 Linked List Cycle Fast &amp; Slow Pointers Easy 11 Middle of the Linked List Fast &amp; Slow Pointers Easy 12 Palindrome Linked List Fast &amp; Slow Pointers Easy 13 Remove Linked List Elements Fast &amp; Slow Pointers Easy 14 Remove Duplicates from Sorted List Fast &amp; Slow Pointers Easy 15 Reverse Linked List In-place reversal of a linked list Easy 16 Merge Two Sorted Lists Two Pointers Easy 17 Meeting Rooms Intervals Easy 18 Binary Search Binary Search Easy 19 Find Smallest Letter Greater Than Target Binary Search Easy 20 Peak Index in a Mountain Array Binary Search Easy 21 Average of Levels in Binary Tree BFS Easy 22 Minimum Depth of Binary Tree BFSDFS Easy 23 Same Tree DFS Easy 24 Path Sum DFS Easy 25 Maximum Depth of Binary Tree DFS Easy 26 Diameter of Binary Tree DFS Easy 27 Merge Two Binary Trees DFS Easy 28 Lowest Common Ancestor of a Binary Search Tree DFS Easy 29 Subtree of Another Tree DFS Easy 30 Invert Binary Tree DFS Easy 31 Two Sum Two Pointers Easy 32 Squares of a Sorted Array Two Pointers Easy 33 Backspace String Compare Two Pointers Easy 34 Index Pairs of a String Trie Easy 35 Majority Element Sorting Easy 36 Convert 1D Array Into 2D Array Arrays Easy 37 Product of Array Except Self Arrays Medium 38 Find the Duplicate Number ArraysBinary SearchTwo Pointers Medium 39 Find All Duplicates in an Array Arrays Medium 40 Set Matrix Zeroes Arrays Medium 41 Spiral Matrix Arrays Medium 42 Rotate Image Arrays Medium 43 Word Search Backtracking Medium 44 Longest Consecutive Sequence Arrays Medium 45 Letter Case Permutation Backtracking Medium 46 Subsets Backtracking Medium 47 Subsets II Backtracking Medium 48 Permutations Backtracking Medium 49 Permutations II Backtracking Medium 50 Combinations Backtracking Medium 51 Combination Sum Backtracking Medium 52 Combination Sum II Backtracking Medium 53 Combination Sum III Backtracking Medium 54 Generate Parentheses Backtracking Medium 55 Target Sum DFSDynamic Programming Medium 56 Palindrome Partitioning Backtracking Medium 57 Letter Combinations of a Phone Number Backtracking Medium 58 Generalized Abbreviation Backtracking Medium 59 House Robber Dynamic Programming Medium 60 House Robber II Dynamic Programming Medium 61 Coin Change Dynamic Programming Medium 62 Maximum Product Subarray Dynamic Programming Medium 63 Longest Increasing Subsequence Dynamic Programming Medium 64 Longest Palindromic Substring Dynamic Programming Medium 65 Word Break Dynamic Programming Medium 66 Combination Sum IV Dynamic Programming Medium 67 Decode Ways Dynamic Programming Medium 68 Unique Paths Dynamic Programming Medium 69 Jump Game Dynamic ProgrammingGreedy Medium 70 Palindromic Substrings Dynamic Programming Medium 71 Number of Longest Increasing Subsequence Dynamic Programming Medium 72 Partition Equal Subset Sum Dynamic Programming Medium 73 Partition to K Equal Sum Subsets Dynamic Programming Medium 74 Best Time to Buy and Sell Stock with Cooldown Dynamic Programming Medium 75 Linked List Cycle II Fast &amp; Slow Pointers Medium 76 Add Two Numbers Fast &amp; Slow Pointers Medium 77 Remove Nth Node From End Of List Fast &amp; Slow Pointers Medium 78 Sort List Fast &amp; Slow Pointers Medium 79 Reorder List Fast &amp; Slow Pointers Medium 80 Clone Graph BFS, DFS, Graph Medium 81 Pacific Atlantic Water Flow BFS, DFS Medium 82 Number of Islands BFS, DFS, Union Find Medium 83 Graph Valid Tree BFS, DFS Graph Union Find Medium 84 Number of Connected Components in an Undirected Graph BFS, DFS, Graph, Union Find Medium 85 Reverse Linked List II In-place reversal of a linked list Medium 86 Rotate List In-place reversal of a linked list Medium 87 Swap Nodes in Pairs In-place reversal of a linked list Medium 88 Odd Even Linked List In-place reversal of a linked list Medium 89 Kth Smallest Element in a Sorted Matrix Binary SearchHeap Medium 90 Find K Pairs with Smallest Sums Heap Medium 91 Merge Intervals Intervals Medium 92 Interval List Intersections Intervals Medium 93 Non-overlapping Intervals Intervals Medium 94 Meeting Rooms II HeapIntervals Medium 95 Task Scheduler GreedyHeap Medium 96 Minimum Number of Arrows to Burst Balloons Greedy Medium 97 Insert Interval Intervals Medium 98 Find Minimum in Rotated Sorted Array Binary Search Medium 99 Find Peak Element Binary Search Medium 100 Search in Rotated Sorted Array Binary Search Medium 101 Search in Rotated Sorted Array II Binary Search Medium 102 Search a 2D Matrix Binary Search Medium 103 Search a 2D Matrix II Binary Search Medium 104 Find K Closest Elements Binary Search Medium 105 Minimum Size Subarray Sum Sliding Window Medium 106 Fruit Into Baskets Sliding Window Medium 107 Permutation in String Sliding Window Medium 108 Longest Repeating Character Replacement Sliding Window Medium 109 Longest Substring Without Repeating Characters Sliding Window Medium 110 Kth Smallest Element in a BST DFS Medium 111 K Closest Points to Origin Heap Medium 112 Top K Frequent Elements Heap Medium 113 Sort Characters By Frequency Heap Medium 114 Kth Largest Element in an Array HeapQuickSelect Medium 115 Reorganize String GreedyHeap Medium 116 Course Schedule BFS, DFS, GraphTopological Sort Medium 117 Course Schedule II BFS, DFS, GraphTopological Sort Medium 118 Minimum Height Trees BFS, GraphTopological Sort Medium 119 Sequence Reconstruction Graph, Topological Sort Medium 120 Binary Tree Level Order Traversal II BFS Medium 121 Binary Tree Level Order Traversal BFS Medium 123 Binary Tree Zigzag Level Order Traversal BFS Medium 124 Populating Next Right Pointers in Each Node BFS Medium 125 Populating Next Right Pointers in Each Node II BFS Medium 126 Binary Tree Right Side View BFS, DFS Medium 127 All Nodes Distance K in Binary Tree BFS, DFS Medium 128 Path Sum II DFS Medium 129 Path Sum III DFS Medium 130 Lowest Common Ancestor of a Binary Tree DFS Medium 131 Maximum Binary Tree DFS Medium 132 Maximum Width of Binary Tree DFS Medium 133 Construct Binary Tree from Preorder and Inorder Traversal DFS Medium 134 Validate Binary Search Tree DFS Medium 135 Implement Trie (Prefix Tree) DesignTrie Medium 136 3 Sum Two Pointers Medium 137 3 Sum Closest Two Pointers Medium 138 Subarrays with Product Less than K Two Pointers Medium 139 Sort Colours Two Pointers Medium 140 Container With Most Water Two Pointers Medium 141 Longest Word in Dictionary Trie Medium 142 Maximum XOR of Two Numbers in an Array Trie Medium 143 First Missing Positive Arrays Hard 144 Sudoku Solver Backtracking Hard 145 N-Queens Backtracking Hard 146 Reverse Nodes in k-Group In-place reversal of a linked list Hard 147 Merge k Sorted Lists Heap Hard 148 Smallest Range Covering Elements from K Lists Heap Hard 149 Employee Free Time Heap, Greedy Hard 150 Count of Range Sum Binary Search Hard 151 Sliding Window Maximum Sliding Window Hard 152 Minimum Number of K Consecutive Bit Flips Sliding Window Hard 153 Count Unique Characters of All Substrings of a Given String Sliding Window Hard 154 Minimum Window Substring Sliding Window Hard 155 Substring with Concatenation of All Words Sliding Window Hard 156 Rearrange String k Distance Apart Greedy, Heap Hard 157 Course Schedule III Greedy, Heap Hard 158 Maximum Frequency Stack Bucket Sor, tHeap Hard 159 Alien Dictionary Graph,Topological Sort Hard 160 Binary Tree Maximum Path Sum DFS Hard 161 Serialize and Deserialize Binary Tree Design Hard 162 Word Search II DFS, Trie Hard 163 Find Median from Data Stream Heap Hard 164 Sliding Window Median Heap Hard 165 Trapping Rain Water Two Pointers Hard 166 Concatenated Words Trie Hard 167 Prefix and Suffix Search Trie Hard 168 Palindrome Pairs Trie Hard 169 Design Search Autocomplete System Trie Hard 170 Word Squares Trie Hard 171 Sort Items by Groups Respecting Dependencies DFS, Graph, Topological Sort Hard 172 Median of Two Sorted Arrays Binary Search Hard <p>Over the time, I also try to understand what is the usage behind those problems. This leads me to an awsome course on Educative Decode the Coding Interview in Java: Real-World Examples.</p>"},{"location":"Blog/2023-08-08-my-first-blog/","title":"My first post","text":"<p>There are many reasons:</p> <ul> <li>To share my knowledge about Software Engineer, DevOps, Cloud Engineer and Stock Investing. </li> <li>To save documents about things that I use frequently like a list of CLIs I use everyday, some common SQL queries</li> <li>To practice my writing skills, story telling, etc.</li> </ul> <p>This blog is written by using Pelican which I feel really easy to use. I think one of the reasons is because I am pretty familiar to Python.</p>"},{"location":"Blog/About/","title":"About","text":"<p>Hello everyone,</p> <p>My name is Vincent Vu. I am a Cloud Software Engineer living in Canada. Besides work, I really enjoy improving knowledge and investment skills, reading economy news, doing to research and recently doing to backtesting my investment strategies. </p> <p>There are many reasons why I wanted to create this blog:</p> <ul> <li>To share my knowledge about Software Engineer, DevOps, Cloud Engineer and Stock Investing. </li> <li>To save documents about things that I use frequently like a list of CLIs I use every day, some common SQL queries, book summary, course summary, etc.</li> <li>To practice my writing skills, story telling, etc.</li> <li>To see how I am improving year by year. </li> </ul> <p>Best, Vincent</p>"},{"location":"References/common-bash-command-lines/","title":"Create Custom Command Lines","text":"<p>These are some common bash command lines I used for personal works. I really hate to remember the commands in details, so I usually create functions in .bash_profile. Below are some examples:</p> <pre><code>v_proxy_set() {\n  echo \"Configuring proxy ...\"\n  export ALL_PROXY=[my proxy config]\n  export HTTP_PROXY=${ALL_PROXY}\n  export HTTPS_PROXY=${ALL_PROXY}\n  export NO_PROXY=localhost,127.0.0.1\n}\n\nv_proxy_unset() {\n  echo \"Removing proxy configuration ...\"\n  unset ALL_PROXY\n  unset HTTP_PROXY\n  unset HTTPS_PROXY\n  unset NO_PROXY\n}\n\nv_java_home_set() {\n  export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)\n  export PATH=$JAVA_HOME/bin:$PATH\n  export PATH=\"/usr/local/opt/node@8/bin:$PATH\"\n}\n\nv_nodejs_home_set() {\n  export PATH=\"/usr/local/opt/node@8/bin:$PATH\"\n}\n\nv_aliases_set() {\n  alias dk='docker'\n  alias dkc='docker-compose'\n  alias gs='git status'\n  alias gc='git checkout'\n  alias gcm='git checkout master'\n  alias ll='ls -lthar'\n  alias df='df -H'\n  alias du='du -ch'\n}\n\nv_aes_decode() {\n  echo $1\n  echo \"$1\" | openssl aes-256-cbc -a -d\n}\n\nv_aes_encode() {\n  echo $1 | openssl aes-256-cbc -a -e\n}\n\nv_git_repos_updates() {\n  echo \"Updating all git repos in current folder ${PWD}\"\n  FILES==$(ls)\n  ROOT_DIR=$(pwd)\n  for i in $FILES; do\n    if [ -d $i ]; then\n      cd $i\n      if [ -d .git ]; then\n        echo \"[+] Updating $(pwd)\"\n        git fetch --all\n      fi\n      cd $ROOT_DIR\n    fi\n  done\n}\n</code></pre> <p>When I need to set proxy on my laptop. I just need to execute command <code>v_proxy_set</code>. </p> <p>Do I need to remember all of my custom command lines. The answer is NO. I just need to type <code>v_</code> and then tab, the terminal will display all of my custom commands which I can use.</p> <p>Just in case you wonder what is <code>v_</code> in my commands stands for, it's my name \"Vincent\". </p>"},{"location":"References/common-mini-conda-commands/","title":"Common miniconda commands","text":""},{"location":"References/common-mini-conda-commands/#list-environments","title":"List environments","text":"<pre><code>conda info --envs\n\n# OR\n\nconda env list\n</code></pre>"},{"location":"References/common-mini-conda-commands/#create-a-new-environment","title":"Create a new environment","text":"<pre><code>conda create --name [env-name] python=3.10\n</code></pre>"},{"location":"References/common-mini-conda-commands/#activate-an-environment","title":"Activate an environment","text":"<pre><code>conda activate [env-name]\n</code></pre>"},{"location":"References/common-mini-conda-commands/#backup-the-current-environment","title":"Backup the current environment","text":"<pre><code>conda env export &gt; environment.yml\n</code></pre>"},{"location":"References/common-mini-conda-commands/#view-a-list-of-packages-in-the-current-environment","title":"View a list of packages in the current environment","text":"<pre><code>conda list\n</code></pre>"},{"location":"References/common-mini-conda-commands/#remove-an-environment","title":"Remove an environment","text":"<pre><code>conda env remove -n [env-name]\n</code></pre>"},{"location":"References/common-mini-conda-commands/#rename-environment","title":"Rename environment","text":"<pre><code>conda rename -n old_name  new_name \n</code></pre>"},{"location":"References/git-submodule/","title":"Git submodules","text":""},{"location":"References/git-submodule/#adding-a-submodule","title":"Adding a submodule","text":"<pre><code>git submodule add git@github.com:[path_to_your_submodule.git] [submodule-path]\n</code></pre>"},{"location":"References/git-submodule/#clone-git-repository-with-submodules","title":"Clone git repository with submodules","text":"<p>Clone a repository, check out and init any possible submodules the repository has.</p> <pre><code>git clone git@github.com:[path_to_your_git_with_submodules.git] \ngit submodule init\ngit submodule update\n</code></pre>"},{"location":"References/git-submodule/#pull-the-main-repository-and-also-its-submodules","title":"Pull the main repository and also it's submodules.","text":"<pre><code>git pull --recurse-submodules\n</code></pre>"},{"location":"References/git-submodule/#update-current-repo-with-submodules","title":"Update current repo with submodules","text":"<pre><code>git submodule update\n</code></pre>"},{"location":"References/git-submodule/#remove-a-submodule","title":"Remove a submodule","text":"<p>A bit tricky process, it involves some steps - Delete the relevant line from the <code>.gitmodules</code> file. - Delete the relevant section from <code>::.git/config</code>. - Run <code>git rm --cached [path_to_submodule]</code> (no trailing slash). - Commit and delete the now untracked submodule files.</p>"},{"location":"References/git-submodule/#references","title":"References","text":"<ul> <li>https://www.atlassian.com/git/tutorials/git-submodule</li> </ul>"},{"location":"References/java-keystore-cheatsheet/","title":"Java Keystore Cheatsheet","text":""},{"location":"References/java-keystore-cheatsheet/#create-a-java-keystore","title":"Create a java keystore","text":"<pre><code>keytool -importcert -trustcacerts -file example-cert.pem -alias ca -keystore keystore.jks\n</code></pre>"},{"location":"References/java-keystore-cheatsheet/#list-content-of-the-key","title":"List content of the key","text":"<pre><code>keytool -list -v -keystore keystore.jks\n ```\n\n### import .crt and .key files into jks\n```bash\nopenssl pkcs12 -export -in /etc/pki/tls/certs/logstash-forwarder.crt -inkey /etc/pki/tls/private/logstash-forwarder.key -out /etc/pki/tls/keystore/logstash-forwarder.p12\n\nkeytool -importkeystore -srckeystore /etc/pki/tls/keystore/logstash-forwarder.p12\\\n        -srcstoretype PKCS12 \\\n        -destkeystore /etc/pki/tls/keystore/logstash-forwarder.jks \\\n        -deststoretype JKS\n</code></pre>"},{"location":"References/java-keystore-cheatsheet/#get-key-file-content","title":"Get key file content","text":"<pre><code>keytool -v -list -keystore   /etc/pki/tls/keystore/logstash-forwarder.jks\n</code></pre>"},{"location":"References/openssl-cheatsheet/","title":"OpenSSL Cheatsheet","text":"<p>NOTE:  The content in this page is my personal note which I got from multiple sources and based on my personal experience.</p>"},{"location":"References/openssl-cheatsheet/#generate-a-new-rsa-key-only","title":"Generate a new RSA key only","text":"<pre><code>openssl genrsa -aes256 -out example.key 2048  \n</code></pre>"},{"location":"References/openssl-cheatsheet/#create-public-key-from-private-key","title":"Create public key from private key","text":"<pre><code>openssl rsa -in example.key -pubout -out example.pub\n</code></pre>"},{"location":"References/openssl-cheatsheet/#generate-ssh-key-from-private-key","title":"Generate SSH key from private key","text":"<pre><code>ssh-keygen  -y -f example.key\n</code></pre>"},{"location":"References/openssl-cheatsheet/#check-openssl-files","title":"Check OpenSSL files","text":"<pre><code>openssl rsa -in example.key -noout -text\nopenssl x509 -in filename.crt -text -noout\nopenssl req -in filename.csr -text -noout\nopenssl rsa -in filename.key -text -noout\n</code></pre>"},{"location":"References/openssl-cheatsheet/#generating-a-self-signed-certificate","title":"Generating a Self-Signed Certificate","text":"<pre><code>openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt\n</code></pre>"},{"location":"References/openssl-cheatsheet/#generate-a-certificate-signing-request-and-new-key","title":"Generate a Certificate Signing Request and new Key","text":"<pre><code>openssl req -new -newkey rsa:2048 -keyout new.key -out new.csr -nodes\n</code></pre>"},{"location":"References/openssl-cheatsheet/#encryptdecrypt-a-file-in-base64-format","title":"Encrypt/Decrypt a file in base64 format","text":"<pre><code>openssl aes-256-cbc -a -in plaintext.file -out encryted.file\nopenssl aes-256-cbc -a -in encryted.file\n</code></pre>"},{"location":"References/openssl-cheatsheet/#package-cert-in-a-pkcs12-file","title":"Package cert in a PKCS12 file","text":"<pre><code>openssl pkcs12 -export -in example.crt -inkey example.key -out example.p12\n</code></pre>"},{"location":"References/openssl-cheatsheet/#create-certificate-request","title":"Create certificate request","text":"<pre><code>openssl req -new -key graylog.key -subj '/C=CA/ST=ON/L=Toronto/O=IT Insfrastructure/OU=DevOps/CN=example.com/emailAddress=admin@exampl.com' -out graylog.csr  -config openssl.cnf\n</code></pre>"},{"location":"References/openssl-cheatsheet/#create-certificate","title":"Create certificate","text":"<pre><code>openssl x509 -req -days 365 -extensions v3_req -in graylog.csr -signkey graylog.key -out graylog.crt -extfile openssl.cnf\n</code></pre>"},{"location":"References/shell-script-cheatsheet/","title":"Bash Shell Cheatsheet","text":"<p>NOTE:  The content in this page is my personal note which I got from multiple sources and based on my personal experience.</p>"},{"location":"References/shell-script-cheatsheet/#file-redirection","title":"File Redirection","text":"<pre><code>&gt; file      Create file\n&gt;&gt; file     Append to file\n&lt; file      Read from file\na | b       Pipe a as input to b\n</code></pre>"},{"location":"References/shell-script-cheatsheet/#read-text-file-line-by-line","title":"Read text file line by line","text":"<pre><code>while read f; do\n    echo \"line is $f\"\ndone &lt; file\n</code></pre>"},{"location":"References/shell-script-cheatsheet/#while-loop","title":"While loop","text":"<pre><code>a=0\nwhile [ \"$a\" -lt 10 ]    # this is loop1\ndo\n   b=\"$a\"\n   while [ \"$b\" -ge 0 ]  # this is loop2\n   do\n      echo -n \"$b \"\n      b=`expr $b - 1`\n   done\n   echo\n   a=`expr $a + 1`\ndone\n</code></pre>"},{"location":"References/shell-script-cheatsheet/#for-loop","title":"For loop","text":"<pre><code>for var in 0 1 2 3 4 5 6 7 8 9\ndo\n   echo $var\ndone\n</code></pre> <pre><code>for FILE in $HOME/.bash*\ndo\n   echo $FILE\ndone\n</code></pre>"},{"location":"References/shell-script-cheatsheet/#until-loop","title":"Until loop","text":"<pre><code>a=0\nuntil [ ! $a -lt 10 ]\ndo\n   echo $a\n   a=`expr $a + 1`\ndone\n</code></pre>"},{"location":"References/shell-script-cheatsheet/#select-loop","title":"Select loop","text":"<p>The select loop provides an easy way to create a numbered menu from which users can select options. It is useful when you need to ask the user to choose one or more items from a list of choices.</p> <pre><code>select var in word1 word2 ... wordN\ndo\n   Statement(s) to be executed for every word.\ndone\n</code></pre> <p>Here var is the name of a variable and word1 to wordN are sequences of characters separated by spaces (words). Each time the for loop executes, the value of the variable var is set to the next word in the list of words, word1 to wordN.</p> <p>For every selection a set of commands would be executed with-in the loop. This loop was introduced in ksh and has been adapted into bash. It is not available in sh.</p> <p>Here is a simple example to let the user select a drink of choice </p> <pre><code>#!/bin/ksh\n\nselect DRINK in tea cofee water juice appe all none\ndo\n   case $DRINK in\n      tea|cofee|water|all) \n         echo \"Go to canteen\"\n         ;;\n      juice|appe)\n         echo \"Available at home\"\n      ;;\n      none) \n         break \n      ;;\n      *) echo \"ERROR: Invalid selection\" \n      ;;\n   esac\ndone\n</code></pre> <p>The menu presented by the select loop looks like the following </p> <pre><code>$./test.sh\n1) tea\n2) cofee\n3) water\n4) juice\n5) appe\n6) all\n7) none\n#? juice\nAvailable at home\n#? none\n$\n</code></pre> <p>You can change the prompt displayed by the select loop by altering the variable PS3 as follows \u2212</p> <pre><code>$PS3=\"Please make a selection =&gt; \" ; export PS3\n$./test.sh\n1) tea\n2) cofee\n3) water\n4) juice\n5) appe\n6) all\n7) none\nPlease make a selection =&gt; juice\nAvailable at home\nPlease make a selection =&gt; none\n$\n</code></pre> <p>Get output of ls into variable</p> <pre><code>myvar=`ls`\n\nFunction declaration\n\ndoubleit(){\nexpr $1 \\* 2\n}\n</code></pre> <pre><code>doubleit 3  # return 6\n</code></pre> <p>Run cmd1; if fails, run cmd2</p> <pre><code>cmd1 || cmd2\n</code></pre> <p>Run cmd1; if it works, run cmd2</p> <pre><code>cmd1 &amp;&amp; cmd2\n</code></pre> <p>Test operators</p> <pre><code>if [ \"$x\" -lt \"$y\" ]; then\n# do something\nfi\n</code></pre> <p>Numeric tests</p> <pre><code>lt  less than\ngt\neq\nne\nge\nle\n</code></pre>"},{"location":"References/shell-script-cheatsheet/#file-tests","title":"File tests","text":"<pre><code>nt  newer than\nd   is a directory\nf   is a file\nx   executable\nr   redable\nw   writable\n</code></pre>"},{"location":"References/shell-script-cheatsheet/#string-tests","title":"String tests","text":"<pre><code>=   equal to\nz   zero length\nn   not zero length\n</code></pre>"},{"location":"References/shell-script-cheatsheet/#logical-test","title":"Logical test","text":"<pre><code>&amp;&amp;\n||\n!\n</code></pre>"},{"location":"References/shell-script-cheatsheet/#arguments","title":"Arguments","text":"<pre><code>$0\n$1\n...\n$#  no of arguments\n$*  all arguments\n</code></pre>"},{"location":"References/shell-script-cheatsheet/#variable-substitution","title":"Variable substitution","text":"<pre><code>${V:-default}   $V, or \"default if unset\n${V:=default}   $V (set to \"default\" if unset)\n${V:?err}   $, or \"err\" if unset\n</code></pre>"},{"location":"References/shell-script-cheatsheet/#preset-varibales","title":"Preset Varibales","text":"<pre><code>$SHELL      What shell is running\n$RANDOM     Provides random number\n$SECONDS    Number of seconds from the time the shell is started\n$$      PID of current process\n$?      Return code from last command\n$!      PID of last background cmd\n$USER       The username of the user running the script.\n$HOSTNAME   The hostname of the machine the script is running on.\n$LINENO     Returns the current line number in the Bash script.\n</code></pre>"},{"location":"References/shell-script-cheatsheet/#passing-an-indirect-reference-to-a-function","title":"Passing an indirect reference to a function","text":"<pre><code>#!/bin/bash\n# ind-func.sh: Passing an indirect reference to a function.\n\necho_var ()\n{\n echo \"$1\"\n}\n\nmessage=Hello\nHello=Goodbye\n\necho_var \"$message\"        # Hello\n# Now, let's pass an indirect reference to the function.\necho_var \"${!message}\"     # Goodbye\n\necho \"-------------\"\n\n# What happens if we change the contents of \"hello\" variable?\nHello=\"Hello, again!\"\necho_var \"$message\"        # Hello\necho_var \"${!message}\"     # Hello, again!\n\nexit 0\n</code></pre>"},{"location":"References/shell-script-cheatsheet/#read-input-from-command-line","title":"Read input from command line","text":"<pre><code>read -s -p \"Enter your password for encryption: \" pass\necho -n ${pass} | my_encoding_script\n</code></pre>"},{"location":"References/shell-script-cheatsheet/#shell-script-with-parameter-expansion","title":"Shell script with parameter expansion","text":"<p>Here is a bash script with parameter expansion which used for managing PostgreSQL database. You can use this script as a template to create a script to manage your systems like database, cloud, etc. </p> <pre><code>#!/bin/bash\n\n[ \"$_FAILHARD\" == \"false\" ] || [ \"$_FAILHARD\" == \"False\" ] &amp;&amp; set +e || set -e\n[ \"$_DEBUG\" == \"true\" ] || [ \"$_DEBUG\" == \"True\" ]  &amp;&amp; set -x || set +x\n\n# REF LINK: http://mywiki.wooledge.org/BashSheet#Parameter_Operations\n\nexport PGHOST=\"localhost\"\nexport PGUSER=${POSTGRES_USER}\nexport PGPASSWORD=${POSTGRES_PASSWORD}\n\n\nusage () {\n  echo \"This script will create new database:\nUsage: $(echo $0 | rev | cut  -f -1 -d '/' | rev) --database=&lt;database&gt; --db-user=&lt;database-user&gt; --db-password=&lt;database-password&gt;\n\nOptions:\n  - database: database name to be created.\n  - db-user: the owner of database.\n  - db-password: the password for database user\n\"\n}\n\n# Get options from command line\nfor i in \"$@\"\ndo\ncase $i in\n    --help)\n    usage &amp;&amp; exit\n    shift \n    ;;\n    -u=*|--db-user=*)\n    DB_USER=\"${i#*=}\"\n    shift \n    ;;\n    -P=*|--db-password=*)\n    DB_PASSWORD=\"${i#*=}\"\n    shift \n    ;;\n    -d=*|--database=*)\n    DATABASE=\"${i#*=}\"\n    shift \n    ;;\n    *)\n    # unknown option\n    ;;\nesac\ndone\n\n# Check input parameters\n[ -z $DATABASE ] &amp;&amp; echo \"[+] --database option is needed.\" &amp;&amp; usage &amp;&amp; exit 1\n[ -z $DB_USER ] &amp;&amp; echo \"[+] --db-use option is needed.\" &amp;&amp; usage &amp;&amp; exit 1\n[ -z $DB_PASSWORD ] &amp;&amp; echo \"[+] --db-password option is needed.\" &amp;&amp; usage &amp;&amp; exit 1\n\n# Create database\npsql &lt;&lt;EOF\nCREATE DATABASE $DATABASE;\nCREATE USER $DB_USER WITH ENCRYPTED PASSWORD '$DB_PASSWORD';\nALTER DATABASE $DATABASE OWNER TO $DB_USER;\nEOF\n</code></pre>"}]}